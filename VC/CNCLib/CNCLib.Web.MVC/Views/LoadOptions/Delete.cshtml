@model CNCLib.GCode.Load.LoadOptions

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>LoadInfo</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LoadType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LoadType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FileContent)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FileContent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SettingName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SettingName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GCodeWriteToFileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GCodeWriteToFileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SwapXY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SwapXY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ScaleX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ScaleX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ScaleY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ScaleY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OfsX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OfsX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OfsY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OfsY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScale)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScale)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScaleKeepRatio)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScaleKeepRatio)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScaleSizeX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScaleSizeX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScaleSizeY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScaleSizeY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScaleBorderDistX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScaleBorderDistX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AutoScaleBorderDistY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AutoScaleBorderDistY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PenMoveType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PenMoveType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EngravePosInParameter)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EngravePosInParameter)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EngravePosUp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EngravePosUp)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EngravePosDown)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EngravePosDown)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MoveSpeed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MoveSpeed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EngraveDownSpeed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EngraveDownSpeed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LaserFirstOnCommand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LaserFirstOnCommand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LaserOnCommand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LaserOnCommand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LaserOffCommand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LaserOffCommand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LaserSize)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LaserSize)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageWriteToFileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageWriteToFileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GrayThreshold)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GrayThreshold)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageDPIX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageDPIX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageDPIY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageDPIY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageInvert)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImageInvert)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dither)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dither)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NewspaperDitherSize)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NewspaperDitherSize)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DotDistX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DotDistX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DotDistY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DotDistY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DotSizeX)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DotSizeX)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DotSizeY)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DotSizeY)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UseYShift)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UseYShift)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RotateHeart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RotateHeart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HoleType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HoleType)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
